{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FoodSearchPipe {\n  transform(foods, searchTerm) {\n    if (!foods) return [];\n    if (!searchTerm) return foods;\n    searchTerm = searchTerm.toLowerCase();\n    return foods.filter(food => {\n      return food.name.toLowerCase().includes(searchTerm);\n    });\n  }\n}\nFoodSearchPipe.ɵfac = function FoodSearchPipe_Factory(t) {\n  return new (t || FoodSearchPipe)();\n};\nFoodSearchPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"foodSearch\",\n  type: FoodSearchPipe,\n  pure: true\n});\nexport { FoodSearchPipe };","map":{"version":3,"names":["FoodSearchPipe","transform","foods","searchTerm","toLowerCase","filter","food","name","includes","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/component/new-food/food-search.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'foodSearch'\n})\nexport class FoodSearchPipe implements PipeTransform {\n  transform(foods: any[], searchTerm: string): any[] {\n    if (!foods) return [];\n    if (!searchTerm) return foods;\n\n    searchTerm = searchTerm.toLowerCase();\n\n    return foods.filter(food => {\n      return food.name.toLowerCase().includes(searchTerm);\n    });\n  }\n}"],"mappings":";AAEA,MAGaA,cAAc;EACzBC,SAASA,CAACC,KAAY,EAAEC,UAAkB;IACxC,IAAI,CAACD,KAAK,EAAE,OAAO,EAAE;IACrB,IAAI,CAACC,UAAU,EAAE,OAAOD,KAAK;IAE7BC,UAAU,GAAGA,UAAU,CAACC,WAAW,EAAE;IAErC,OAAOF,KAAK,CAACG,MAAM,CAACC,IAAI,IAAG;MACzB,OAAOA,IAAI,CAACC,IAAI,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,UAAU,CAAC;IACrD,CAAC,CAAC;EACJ;;AAVWH,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;;QAAdA,cAAc;EAAAS,IAAA;AAAA;SAAdT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}